main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP
	SUB SP, 2
	SUB SP, 2
	SUB SP, 20
	SUB SP, 2
L0:
	PUSH 7
	POP AX
	MOV [BP-2], AX
	PUSH AX
	POP AX
L1:
	PUSH 6
	POP AX
	MOV [BP-4], AX
	PUSH AX
	POP AX
L2:
	MOV AX, [BP-2]
	PUSH AX
	MOV AX, [BP-4]
	PUSH AX
	POP BX
	POP AX
	CMP AX, BX
	JG 
	JMP 
L3:
	PUSH 4
	PUSH 2
	POP BX
	POP AX
	CMP AX, BX
	JL 
	JMP 
L4:
	PUSH 10
	POP AX
	MOV [BP-26], AX
	PUSH AX
	POP AX
	JMP 
L5:
	PUSH 20
	POP AX
	MOV [BP-26], AX
	PUSH AX
	POP AX
L6:
	MOV AX, [BP-26]
	CALL print_output
	CALL new_line
L7:
	PUSH 9
	POP AX
	MOV [BP-4], AX
	PUSH AX
	POP AX
L8:
	MOV AX, [BP-4]
	PUSH AX
	PUSH 5
	POP BX
	POP AX
	CMP AX, BX
	JG 
	JMP 
	POP AX
L9:
	MOV AX, [BP-4]
	MOV AX, [BP-4]
	PUSH AX
	DEC AX
	MOV [BP-4], AX
	JMP L8
L10:
	MOV AX, [BP-4]
	CALL print_output
	CALL new_line
	JMP L9
L11:
	PUSH 14
	POP AX
	MOV [BP-4], AX
	PUSH AX
	POP AX
L12:
L13:
	MOV AX, [BP-4]
	PUSH AX
	PUSH 0
	POP BX
	POP AX
	CMP AX, BX
	JG 
	JMP 
L14:
	MOV AX, [BP-4]
	PUSH AX
	PUSH 3
	POP BX
	POP AX
	CMP AX, BX
	JG 
	JMP 
L15:
	MOV AX, [BP-4]
	CALL print_output
	CALL new_line
L16:
	MOV AX, [BP-4]
	MOV AX, [BP-4]
	PUSH AX
	DEC AX
	MOV [BP-4], AX
	POP AX
	JMP L13
L17:
	PUSH 30
	POP AX
	MOV [BP-26], AX
	PUSH AX
	POP AX
L18:
	MOV AX, [BP-26]
	CALL print_output
	CALL new_line
L19:
	PUSH 0
	POP AX
	ADD SP, 26
	POP BP
	MOV AX, 4CH
	INT 21H
main ENDP
